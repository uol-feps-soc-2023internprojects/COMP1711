[
  {
    "objectID": "Exercises/e01-linux-cli.html",
    "href": "Exercises/e01-linux-cli.html",
    "title": "1: Linux Command line skills",
    "section": "",
    "text": "steps:\npwd - show directory\nls [path]\ncd [path]"
  },
  {
    "objectID": "Notes/n01-intro.html",
    "href": "Notes/n01-intro.html",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "",
    "text": "The terminal is a window on a machine that allows for the input and output of text. The shell is the primary interface that is run within the terminal, creating a command line interface (CLI). Choice of shell will effect user experience but not functionality, common shells include: bash, zhs, and fish."
  },
  {
    "objectID": "Notes/n01-intro.html#the-prompt",
    "href": "Notes/n01-intro.html#the-prompt",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "The prompt",
    "text": "The prompt\nAs a user when you open a terminal you will be greeted by a prompt. On codespaces this prompt will often take the form @{user} -&gt; workspace/{repository} $ whereas on a standard linux machine the prompt often takes the form {user}@{hostname} $. Because of these differences most sources of information will simply show the prompt as the single $ that normally ends a prompt when they describe commands, it is important to remember that this symbol is not part of the command."
  },
  {
    "objectID": "Notes/n01-intro.html#your-first-command",
    "href": "Notes/n01-intro.html#your-first-command",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "Your first command",
    "text": "Your first command\nSelect your terminal and type the command pwd after the prompt. (pwd is an acronym for print working directory). Your output should be similar to what is seen below:\n$ pwd\n/workspaces/codespaces-blank\nThis command will print the absolute path of the current working directory, that is the location in the file system that the commands being run in the shell are being executed. The slash at the start of the path represents the root of the filesystem and the subsequent terms represent a series of hierarchical directories."
  },
  {
    "objectID": "Notes/n01-intro.html#seeing-your-files",
    "href": "Notes/n01-intro.html#seeing-your-files",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "Seeing your files",
    "text": "Seeing your files\nNow try the ls command. (ls is a shortening of the word list) This will output a list of the contents of the current directory, though in your case this directory is empty. To change that run the following commands exactly:\ngit clone https://github.com/callaghanmt/shell-training.git .\n\n\n\n\n\n\nNote\n\n\n\nThis step uses the version control tool git, more will be explained about this later.\n\n\nNow if we rerun ls we should get a different outcome\n$ ls\nIOM-animals  data  some-maths.txt  wildcards\nIn most terminals this will be highlighted to suggest the kind of file system entry that each item is but otherwise we can use a slightly changed command to view this information.\n$ ls -F\nIOM-animals/  data/  some-maths.txt  wildcards/\nThis command will append a trailing character to different types of directory entry: / for nested directories, * for executables, and @ for links. In the above example we can see 3 directories and a file.\nThe -F part of this command is known as an option."
  },
  {
    "objectID": "Notes/n01-intro.html#options",
    "href": "Notes/n01-intro.html#options",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "Options",
    "text": "Options\nOptions are used to modify the behavior of a command being run and can do many different things. Rerunning the ls command again with the option -a will additionally reveal all the ‘hidden’ items in the directory (all the items with names starting with a .). There are two special items that will be revealed when using this option those are . and ..: . is used as a reference to the current directory and .. is used as a reference to the parent directory.\nUsing the -l command will output a table with lots of additional information about the directory entries including size and last edit time. You should try this out.\n\n\n\n\n\n\nTip\n\n\n\nYou can combine multiple different options together to apply all their effects"
  },
  {
    "objectID": "Notes/n01-intro.html#navigation",
    "href": "Notes/n01-intro.html#navigation",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "Navigation",
    "text": "Navigation\nMost terminals will open to the home directory of the account or machine that is being run, though this is often not the directory whe one would want to run commands. Therefore, there must be a way to navigate through the file system, in most machines that is using the cd command. This command takes a path as an value after the command (called an argument in this case). These can either be an absolute path or a relative path.\n\n\n\n\n\n\nImportant\n\n\n\nAbsolute path start with a / and reference the same file or location regardless of the current working directory.\nRelative paths do not start with a / and reference file or location from the current working directory.\n\n\n$ cd IOM-animals\n$ ls -F\namphibians.txt  birds.txt  insects.txt  mammals.txt  reptiles.txt\nThe command can also be run without any arguments, this will navigate back to the home directory of the account ."
  },
  {
    "objectID": "Notes/n01-intro.html#essential-commands",
    "href": "Notes/n01-intro.html#essential-commands",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "Essential Commands:",
    "text": "Essential Commands:\n\nls - short for list (-a)\npwd - ‘print working directory’\ncd - change directory\nrm - short for remove\nmkdir - short for make directory\ntouch -\ncat\necho -\nless\nmv + use for renaming\ncp\nman\ntree\nchmod\nclear"
  },
  {
    "objectID": "Notes/n01-intro.html#section",
    "href": "Notes/n01-intro.html#section",
    "title": "1: Intro to the terminal, git and codespaces.",
    "section": "??",
    "text": "??\n\nredirection: &lt;&gt;\nwildcards: ? *\npipe: |\ncase sensitive"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Procedural Programming",
    "section": "",
    "text": "This site is a center of information for the module: COMP 1711 Procedural Programming"
  }
]